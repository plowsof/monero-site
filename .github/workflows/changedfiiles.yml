name: CI

on:
  push:

jobs:
  # -------------------------------------------------------------
  # Using GitHub's API is not supported for push events
  # -------------------------------------------------------------
  # 
  # ----------------------------------------------------------------------------------------------
  # Using local .git history
  # ----------------------------------------------------------------------------------------------
  # Event `push`: Compare the preceding remote commit -> to the current commit of the main branch 
  # ----------------------------------------------------------------------------------------------
  changed_files:
    runs-on: ubuntu-latest  # windows-latest || macos-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write
    name: Test changed-files
    steps:
      - uses: actions/checkout@v4
        with:
          branch: ${{ github.ref }}
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
             **.po
             **.pot
      # NOTE: `since_last_remote_commit: true` is implied by default and falls back to the previous local commit.
      - name: Run step if po/pot files are changed
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
          
          git config --global user.name "weblate-po4a"
          git config --global user.email "weblate-po4a@example.com"
          ERROR=0
          for po_file in ${ALL_CHANGED_FILES}; do
            # Determine the corresponding config file
            directory=$(echo "$po_file" | sed -E 's|_i18n/.*/resources/([^/]+)/.*|\1|')
            config_file=$(basename "$po_file" .po).config
            config_file_path="po/$directory/$config_file"
            
            if [ -f "$config_file_path" ]; then
              echo "-> Running po4a on ${config_file_path}"
              cd po
              if po4a "${config_file_path}"; then
                echo "po4a ran successfully on ${config_file_path}"
                cd ..
                git add .
                COMMIT_MESSAGE="po4a: ${config_file_path} updates"
                git commit -m "${COMMIT_MESSAGE}"
              else
                echo "ERROR: something went wrong, po4a didn't run successfully on ${config_file_path}"
                cd ..
                ERROR=1
              fi
            else
              echo "ERROR: Config file ${config_file_path} not found, exiting."
              ERROR=1
            fi
          done
          exit $ERROR
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
