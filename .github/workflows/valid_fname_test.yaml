---
name: Validate Hashes
on:
  workflow_dispatch:
jobs:
  validate-hashes:
    name: Validate Hashes
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: TEST FILENAME VALIDITY
        run: |
          lines="$(grep -v ^# downloads/hashes.txt)"
          SAVEIFS=$IFS   # Save current IFS (Internal Field Separator)
          IFS=$'\n'      # Change IFS to newline char
          lines=($lines) # split the `names` string into an array by the same name
          IFS=$SAVEIFS

          #14-18 is gui
          #2-13 is cli
          num=0
          version_gui=$(awk '/monero-gui-source-v/ {print $2}' hashes.txt | awk -F".tar.bz2" '{print $1}' | awk -F"-" '{print $4}')
          version_cli=$(awk '/monero-source-v/ {print $2}' hashes.txt | awk -F".tar.bz2" '{print $1}' | awk -F"-" '{print $3}')

          filenames_cli=()
          filenames_gui=()

          for line in "${lines[@]}"; do
              the_line=($line)
              # we expect it to be 2, could error here
              length="${#the_line[@]}"
              ((length-=1))
              # last element in array == monero-gui-install-win-x64-v0.18.1.1.exe"
              filename="${the_line[$length]}"
              if [ $num -gt 1 ] && [ $num -lt 14 ] ; then
                  #CLI
                  filenames_cli+=("${filename}")
              elif [ $num -gt 13 ] && [ $num -lt 19 ] ; then
                 #GUI
                  filenames_gui+=("${filename}")
              fi
              ((num+=1))
          done

          cli_files=(\
          "monero-android-armv7-${version_cli}.tar.bz2" \
          "monero-android-armv8-${version_cli}.tar.bz2" \
          "monero-freebsd-x64-${version_cli}.tar.bz2" \
          "monero-linux-armv7-${version_cli}.tar.bz2" \
          "monero-linux-armv8-${version_cli}.tar.bz2" \
          "monero-linux-x64-${version_cli}.tar.bz2" \
          "monero-linux-x86-${version_cli}.tar.bz2" \
          "monero-mac-armv8-${version_cli}.tar.bz2" \
          "monero-mac-x64-${version_cli}.tar.bz2" \
          "monero-win-x64-${version_cli}.zip" \
          "monero-win-x86-${version_cli}.zip" \
          "monero-source-${version_cli}.tar.bz2")

          gui_files=(\
          "monero-gui-install-win-x64-${version_gui}.exe" \
          "monero-gui-linux-x64-${version_gui}.tar.bz2" \
          "monero-gui-mac-x64-${version_gui}.dmg" \
          "monero-gui-win-x64-${version_gui}.zip" \
          "monero-gui-source-${version_gui}.tar.bz2")

          check_filenames(){
              local -n file_list=$1
              local -n hardcoded=$2
              for f in "${file_list[@]}"; do
              if [[ "${hardcoded[*]}" =~ "${f}" ]]; then
                  # whatever you want to do when array contains value
                  echo "Good: ${f}"
              else
                  echo "Error: ${f}"
                  exit 0
              fi
              done
          }

          check_filenames filenames_cli cli_files
          check_filenames filenames_gui gui_files

